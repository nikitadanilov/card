// C card self-documentation deck
// id intro
// +# trunk 0
This is the documentation for the card tool.
/ += . "card" -> https://github.com/nikitadanilov/card

card is similar to various "publishing" tools that take as the input content
marked up with various formatting instructions and then render it in various
formats. It is much simpler than hugo or pandoc and its intended scope is more
of a component in a note-taking system, than a full-blown site publishing engine.
/ += . "hugo" -> https://gohugo.io/
/ += . "pandoc" -> https://pandoc.org/

The input is a "deck", which is a set of "cards", each consisting of
"fragments". Fragments correspond to paragraphs and things like code and math
displays in the output. Cards are used to ogranise content into "series", they
can correspond to pages in the output, but not necessarily.

Decks, cards and fragments all have attributes.

The documentation is, naturally, maintained via card here.
/ += . "here" -> https://github.com/nikitadanilov/card/blob/master/self.deck

Here is the source code for this card, so far (this is not a Quine preceeded by
its own quotation):
/ += . "the source code" -> https://github.com/nikitadanilov/card/blob/master/self.deck

; code
|// C card self-documentation deck
|// id intro
|// +# trunk 0
|This is the documentation for the card tool.
|/ += . "card" -> https://github.com/nikitadanilov/card
|
|card is similar to various "publishing" tools that take as the input content
|marked up with various formatting instructions and then render it in various
|formats. It is much simpler than hugo or pandoc and its intended scope is more
|of a component in a note-taking system, than a full-blown site publishing engine.
|/ += . "hugo" -> https://gohugo.io/
|/ += . "pandoc" -> https://pandoc.org/
|
|The input is a "deck", which is a set of "cards", each consisting of
|"fragments". Fragments correspond to paragraphs and things like code and math
|displays in the output. Cards are used to ogranise content into "series", they
|can correspond to pages in the output, but not necessarily.
|
|Decks, cards and fragments all have attributes.
|
|The documentation is, naturally, maintained via card here.
|/ += . "here" -> https://github.com/nikitadanilov/card/blob/master/self.deck
|
|Here is the source code for this card, so far (this is not a Quine preceeded by
|its own quotation):
|/ += . "the source code" -> https://github.com/nikitadanilov/card/blob/master/self.deck

Note that markup instructions are not embedded in the text. For example, the
link to Hugo's website is created by

; code
|/ += . "hugo" -> https://gohugo.io/

This attaches the hyperlink to the part of the preceding paragraph matching the
regular expression "hugo".

The separation between the text and the markup makes (in my personal opinion,
that is) the content source more readable.

\

// id phases
// +# trunk 1
Deck processing happens in the following phases:

*1*. Syntax. The deck consists of one of more _cardfiles_. Cardfiles are read
 sequentially and parsed. The word "parsed" should not be taken too
 seriously. There is no formal grammar and the "parser" is just a bunch of
 str.split() and str.strip() calls. The main parser's logic is in
 card.cardread() function. (Fun fact: the hyperlinks to the functions in the
 preceding sentences are generated automatically.)
